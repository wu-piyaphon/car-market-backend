name: CD Pipeline

on:
  workflow_run:
    workflows: ['CI Pipeline']
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted
    environment: production
    
    env:
      CONTAINER_NAME: car-market-app-container
      IMAGE_NAME: wupiyaphon/car-market-backend:latest
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SSL: ${{ vars.SSL }}
      PORT: 8080

    steps:
      - name: Clean up Docker resources
        run: |
          echo "Cleaning up unused Docker resources..."
          sudo docker system prune -a -f
          echo "✅ Docker cleanup completed"

      - name: Pull latest Docker image
        run: sudo docker pull ${{ env.IMAGE_NAME }}

      - name: Stop existing container
        run: sudo docker rm -f ${{ env.CONTAINER_NAME }} || true

      - name: Run database migrations
        run: |
          sudo docker run --rm \
            -e AWS_ACCESS_KEY_ID="${{ env.AWS_ACCESS_KEY_ID }}" \
            -e AWS_SECRET_ACCESS_KEY="${{ env.AWS_SECRET_ACCESS_KEY }}" \
            -e AWS_REGION="${{ env.AWS_REGION }}" \
            -e AWS_S3_BUCKET="${{ env.AWS_S3_BUCKET }}" \
            -e JWT_SECRET="${{ env.JWT_SECRET }}" \
            -e DATABASE_URL="${{ env.DATABASE_URL }}" \
            -e SSL="${{ env.SSL }}" \
            -e NODE_ENV="production" \
            ${{ env.IMAGE_NAME }} \
            yarn migration:run:prod

      - name: Start application container
        run: |
          sudo docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            -p ${{ env.PORT }}:${{ env.PORT }} \
            -e AWS_ACCESS_KEY_ID="${{ env.AWS_ACCESS_KEY_ID }}" \
            -e AWS_SECRET_ACCESS_KEY="${{ env.AWS_SECRET_ACCESS_KEY }}" \
            -e AWS_REGION="${{ env.AWS_REGION }}" \
            -e AWS_S3_BUCKET="${{ env.AWS_S3_BUCKET }}" \
            -e JWT_SECRET="${{ env.JWT_SECRET }}" \
            -e DATABASE_URL="${{ env.DATABASE_URL }}" \
            -e SSL="${{ env.SSL }}" \
            -e PORT="${{ env.PORT }}" \
            -e NODE_ENV="production" \
            ${{ env.IMAGE_NAME }}

      - name: Wait for application startup
        run: sleep 20

      - name: Verify deployment
        run: |
          if sudo docker ps --filter "name=${{ env.CONTAINER_NAME }}" --filter "status=running" | grep -q ${{ env.CONTAINER_NAME }}; then
            echo "✅ Deployment successful"
            sudo docker ps --filter "name=${{ env.CONTAINER_NAME }}"
          else
            echo "❌ Deployment failed"
            echo "Container logs:"
            sudo docker logs ${{ env.CONTAINER_NAME }}
            exit 1
          fi
